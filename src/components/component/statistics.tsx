// const [oldAds, setOldAds] = useState<any[]>();
"use client"
import React, { useState, useEffect } from 'react';
import { CardTitle, CardHeader, CardContent, Card } from "@/components/ui/card"
import { ResponsiveLine } from "@nivo/line"
import { ResponsiveBar } from "@nivo/bar"
import { ResponsivePie } from "@nivo/pie"
import axios from "axios"



export function Statistics() {
  const [ads, setAds] = useState<any>([]);

  useEffect(() => {
    // Получение данных с бэкенда при загрузке компонента
    fetchData();
  }, [ads]);

  const fetchData = async () => {
    try {
      const response = await axios.get("https://back-hw3.onrender.com/api/kolesa");
      console.log(response.data)
      setAds(response.data); // Устанавливаем данные в состояние
      console.log(ads)
    } catch (error) {
      console.error('Ошибка при получении данных:', error);
      // Обработка ошибок при получении данных
    }
  };


  return (
    <div className="min-h-screen w-full bg-gray-100 dark:bg-gray-950">
      <header className="bg-white dark:bg-gray-900 shadow px-[8%] py-[30px]">
        <div className="container mx-auto px-4 py-6 md:py-8">
          <h1 className="text-2xl font-bold tracking-tight text-gray-900 dark:text-gray-50">Statistics</h1>
        </div>
      </header>
      <main className="container mx-auto py-8 md:py-12">
        <div className="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4 px-[8%] py-[30px]">
          <Card>
            <CardHeader>
              <CardTitle>How Many Ads We Have</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="flex items-center justify-between">
                <div className="text-4xl font-bold">{ads.length}</div> {/* Отображаем количество объявлений */}
                <LineChart className="w-20 h-20" />
              </div>
              <p className="mt-2 text-sm text-gray-500 dark:text-gray-400">
                The total number of ads
              </p>
            </CardContent>
          </Card>
          <Card>
            <CardHeader>
              <CardTitle>How Many New Ads We Have</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="flex items-center justify-between">
                <div className="text-4xl font-bold">{ads.length}</div>
                <BarChart className="w-20 h-20" />
              </div>
              <p className="mt-2 text-sm text-gray-500 dark:text-gray-400">
                The number of users who have been active in the last 30 days.
              </p>
            </CardContent>
          </Card>
          <Card>
            <CardHeader>
              <CardTitle>Revenue</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="flex items-center justify-between">
                <div className="text-4xl font-bold">$125,000</div>
                <LineChart className="w-20 h-20" />
              </div>
              <p className="mt-2 text-sm text-gray-500 dark:text-gray-400">
                The total revenue generated by the platform in the last 30 days.
              </p>
            </CardContent>
          </Card>
          <Card>
            <CardHeader>
              <CardTitle>Conversion Rate</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="flex items-center justify-between">
                <div className="text-4xl font-bold">4.5%</div>
                <PieChart className="w-20 h-20" />
              </div>
              <p className="mt-2 text-sm text-gray-500 dark:text-gray-400">
                The percentage of visitors who complete a desired action, such as a purchase or sign-up.
              </p>
            </CardContent>
          </Card>
        </div>
      </main>
      {/* Вывод объявлений */}
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 px-[8%] py-[30px]">
        {ads.map((ad: any, index: number) => (
          <div key={index} className="bg-white rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300">
            <img
              src={ad.image || "/placeholder.svg"} // Используем изображение или плейсхолдер, если изображение отсутствует
              width={600}
              height={400}
              alt="Postcard Image"
              className="w-full h-64 object-cover"
            />
            <div className="p-6">
              <h3 className="text-2xl font-bold mb-2">{ad.title}</h3>
              <p className="text-gray-500 text-sm">
                {ad.description || 'No description'} {/* Отображаем описание или текст, если описание отсутствует */}
              </p>
            </div>
          </div>
        ))}
      </div>
    </div>
  )
}


function LineChart(props: any) {
  return (
    <div {...props}>
      <ResponsiveLine
        data={[
          {
            id: "Desktop",
            data: [
              { x: "Jan", y: 43 },
              { x: "Feb", y: 137 },
              { x: "Mar", y: 61 },
              { x: "Apr", y: 145 },
              { x: "May", y: 26 },
              { x: "Jun", y: 154 },
            ],
          },
          {
            id: "Mobile",
            data: [
              { x: "Jan", y: 60 },
              { x: "Feb", y: 48 },
              { x: "Mar", y: 177 },
              { x: "Apr", y: 78 },
              { x: "May", y: 96 },
              { x: "Jun", y: 204 },
            ],
          },
        ]}
        margin={{ top: 10, right: 10, bottom: 40, left: 40 }}
        xScale={{
          type: "point",
        }}
        yScale={{
          type: "linear",
        }}
        axisTop={null}
        axisRight={null}
        axisBottom={{
          tickSize: 0,
          tickPadding: 16,
        }}
        axisLeft={{
          tickSize: 0,
          tickValues: 5,
          tickPadding: 16,
        }}
        colors={["#2563eb", "#e11d48"]}
        pointSize={6}
        useMesh={true}
        gridYValues={6}
        theme={{
          tooltip: {
            chip: {
              borderRadius: "9999px",
            },
            container: {
              fontSize: "12px",
              textTransform: "capitalize",
              borderRadius: "6px",
            },
          },
          grid: {
            line: {
              stroke: "#f3f4f6",
            },
          },
        }}
        role="application"
      />
    </div>
  )
}


function PieChart(props: any) {
  return (
    <div {...props}>
      <ResponsivePie
        data={[
          { id: "Jan", value: 111 },
          { id: "Feb", value: 157 },
          { id: "Mar", value: 129 },
          { id: "Apr", value: 150 },
          { id: "May", value: 119 },
          { id: "Jun", value: 72 },
        ]}
        sortByValue
        margin={{ top: 10, right: 10, bottom: 10, left: 10 }}
        cornerRadius={0}
        padAngle={0}
        borderWidth={1}
        borderColor={"#ffffff"}
        enableArcLinkLabels={false}
        arcLabel={(d) => `${d.id}`}
        arcLabelsTextColor={"#ffffff"}
        arcLabelsRadiusOffset={0.65}
        colors={["#2563eb"]}
        theme={{
          labels: {
            text: {
              fontSize: "18px",
            },
          },
          tooltip: {
            chip: {
              borderRadius: "9999px",
            },
            container: {
              fontSize: "12px",
              textTransform: "capitalize",
              borderRadius: "6px",
            },
          },
        }}
        role="application"
      />
    </div>
  )
}



function BarChart(props: any) {
  return (
    <div {...props}>
      <ResponsiveBar
        data={[
          { name: "Jan", count: 111 },
          { name: "Feb", count: 157 },
          { name: "Mar", count: 129 },
          { name: "Apr", count: 150 },
          { name: "May", count: 119 },
          { name: "Jun", count: 72 },
        ]}
        keys={["count"]}
        indexBy="name"
        margin={{ top: 0, right: 0, bottom: 40, left: 40 }}
        padding={0.3}
        colors={["#2563eb"]}
        axisBottom={{
          tickSize: 0,
          tickPadding: 16,
        }}
        axisLeft={{
          tickSize: 0,
          tickValues: 4,
          tickPadding: 16,
        }}
        gridYValues={4}
        theme={{
          tooltip: {
            chip: {
              borderRadius: "9999px",
            },
            container: {
              fontSize: "12px",
              textTransform: "capitalize",
              borderRadius: "6px",
            },
          },
          grid: {
            line: {
              stroke: "#f3f4f6",
            },
          },
        }}
        tooltipLabel={({ id }) => `${id}`}
        enableLabel={false}
        role="application"
        ariaLabel="A bar chart showing data"
      />
    </div>
  )
}